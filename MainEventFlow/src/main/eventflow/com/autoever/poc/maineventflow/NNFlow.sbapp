<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<modify version="11.0.1_9ac66cf38631f8473e37c39091c4b798f01bbf41">
    <add>
        <annotations>
            <annotation name="hygienic"/>
        </annotations>
        <type-metadata>
            <param name="type" value="module"/>
            <param name="fully-qualified-name" value="com.autoever.poc.maineventflow.NNFlow"/>
        </type-metadata>
        <memory-model-settings/>
        <import alias="FieldType" from="com.autoever.poc.parser.CCPParser_v3" item="FieldType"/>
        <parameter-definitions>
            <parameter default="d:/Projects/vdms/tools/Python/Python311/python.exe" name="PYTHON_EXECUTABLE"/>
            <parameter default="d:/projects/vdms/resources" name="RESOURCE_ROOT"/>
            <parameter default="lv://localhost:11080" name="LV_SERVER_URI"/>
            <parameter default="20" name="COUNT_CAR"/>
        </parameter-definitions>
        <dynamic-variables>
            <dynamic-variable initial-expression="emptylist(long(null))" name="VIDs" setter-expression="CCPVIDs" setter-stream="OutputVarStream"/>
        </dynamic-variables>
        <stream name="InputStream">
            <schema>
                <field name="baseTime" type="long"/>
                <field name="cellData" type="string"/>
                <field name="CF_OBC_DCChargingStat" type="string"/>
                <field name="chargingNow" type="long"/>
                <field name="deltaTime" type="double"/>
                <field name="messageID" type="string"/>
                <field name="mgmtNO" type="string"/>
                <field name="RawParsed" type="tuple">
                    <schema>
                        <field name="rawCellData" type="list">
                            <element-type type="tuple">
                                <schema>
                                    <field name="fieldName" type="string"/>
                                    <field name="fieldValue" type="long"/>
                                </schema>
                            </element-type>
                        </field>
                        <field name="rawMsrTBData" type="list">
                            <element-type type="tuple">
                                <schema>
                                    <field name="fieldName" type="string"/>
                                    <field name="fieldValue" type="long"/>
                                </schema>
                            </element-type>
                        </field>
                        <field name="rawSOC" type="double"/>
                        <field name="rawIBM" type="double"/>
                        <field name="rawChargingNow" type="long"/>
                        <field name="rawISOL" type="long"/>
                        <field name="rawFaultCode" type="long"/>
                        <field name="rawNvmAccChaAh" type="long"/>
                        <field name="rawNvmAccDhaAh" type="long"/>
                    </schema>
                </field>
                <field name="realTime" type="long"/>
                <field name="rootCount" type="int"/>
                <field name="terminalID" type="string"/>
                <field name="vehicleKeyID" type="long"/>
                <field name="IsEnded" type="bool"/>
                <field name="IsStarted" type="bool"/>
            </schema>
        </stream>
        <box name="Init" type="inputadapter">
            <output port="1" stream="out:Init_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.once.Once"/>
            <param name="OutputField" value="time"/>
        </box>
        <box name="Filter" type="filter">
            <input port="1" stream="InputStream"/>
            <output port="1" stream="out:Filter_1"/>
            <output port="2" stream="out:Filter_2"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="IsEnded || IsStarted"/>
            <param name="expression.1" value="chargingNow==1 &amp;&amp; getDoubleFromStr(CF_OBC_DCChargingStat, 0.0)==1.0"/>
        </box>
        <box name="Split" type="split">
            <input port="1" stream="out:Init_1"/>
            <output port="1" stream="out:Split_1"/>
            <output port="2" stream="out:Split_2"/>
            <param name="output-count" value="2"/>
        </box>
        <box name="addParam" type="map">
            <input port="1" stream="out:Filter_2"/>
            <output port="1" stream="out:addParam_1"/>
            <target-list>
                <item name="input" selection="none">
                    <include field="CF_OBC_DCChargingStat"/>
                    <include field="chargingNow"/>
                    <include field="messageID"/>
                    <include field="terminalID"/>
                    <include field="vehicleKeyID"/>
                    <include field="mgmtNO"/>
                    <include field="rootCount"/>
                    <include field="realTime"/>
                    <include field="cellData"/>
                    <declare field="vbMax">getCCPMaxFieldValue(RawParsed.rawCellData)</declare>
                    <declare field="vbMin">getCCPMinFieldValue(RawParsed.rawCellData)</declare>
                    <declare field="tbMax">getCCPMaxFieldValue(RawParsed.rawMsrTBData)</declare>
                    <declare field="tbMin">getCCPMinFieldValue(RawParsed.rawMsrTBData)</declare>
                </item>
                <expressions>
                    <include field="cellParam">maplist(function(f FieldType) { double(f.fieldValue) }, RawParsed.rawCellData)</include>
                    <include field="ccpParam">list(RawParsed.rawIBM, RawParsed.rawISOL, vbMax, vbMin, tbMax, tbMin, RawParsed.rawSOC, (vbMax-vbMin), (tbMax-tbMin))</include>
                    <include field="routingIndex">indexof(VIDs, vehicleKeyID)</include>
                </expressions>
            </target-list>
        </box>
        <box name="GetVIDs" type="map">
            <input port="1" stream="out:Split_2"/>
            <output port="1" stream="OutputVarStream"/>
            <target-list>
                <item name="input" selection="all"/>
                <expressions>
                    <include field="CCPVIDs">maplist(function(e string) {long(e)}, GetFilenameListInPath("${RESOURCE_ROOT}/evt", 'evt'))</include>
                </expressions>
            </target-list>
        </box>
        <box name="InitModel" type="map">
            <input port="1" stream="out:Split_1"/>
            <output port="1" stream="out:InitModel_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="inputVars.modelFolder">"${RESOURCE_ROOT}/OCSVM"</include>
                </expressions>
            </target-list>
        </box>
        <output-stream name="OutputVarStream"/>
        <box name="LoadModel" type="java">
            <input port="1" stream="out:InitModel_1"/>
            <output port="1" stream="OutputLoadModelStream"/>
            <error stream="ErrorOutputStream"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="false"/>
            <param name="GlobalInstanceId" value="python_nn_instance"/>
            <param name="InstanceType" value="Global"/>
            <param name="LocalInstanceId" value="nn_instance"/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;output&quot; type=&quot;string&quot;/&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="Script" value="output = &quot;model loaded&quot;&#13;&#10;"/>
            <param name="ScriptFile" value="load_ocsvm_model.py"/>
            <param name="ScriptSource" value="File"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <box name="Union" type="union">
            <input port="1" stream="out:Filter_1"/>
            <input port="2" stream="out:addParam_1"/>
            <output port="1" stream="out:Union_1"/>
            <param name="strict" value="false"/>
        </box>
        <error-output-stream name="ErrorOutputStream"/>
        <output-stream name="OutputLoadModelStream"/>
        <box name="AggParamPerCar" type="aggregate">
            <input dispatch="numerical" key="routingIndex" port="1" stream="out:Union_1"/>
            <output port="1" stream="out:AggParamPerCar_1"/>
            <param name="parallel" value="true"/>
            <multiplicity number="${COUNT_CAR}" type="concrete"/>
            <param name="dimension-name.0" value="Dimension1"/>
            <param name="dimension-type.0" value="Predicate"/>
            <param name="dimension-partial.0" value="no"/>
            <param name="dimension-open-predicate.0" value="IsStarted"/>
            <param name="dimension-close-predicate.0" value="IsEnded"/>
            <param name="dimension-emit-close-first.0" value="true"/>
            <param name="output-group-by" value="true"/>
            <target-list>
                <expressions>
                    <include field="count">count()</include>
                    <include field="vehicleKeyID">lastval(vehicleKeyID)</include>
                    <include field="terminalID">lastval(terminalID)</include>
                    <include field="mgmtNO">lastval(mgmtNO)</include>
                    <include field="rootCount">lastval(rootCount)</include>
                    <include field="cells">aggregatelistnonnull(cellData)</include>
                    <include field="ccps">aggregatelistnonnull(ccpParam)</include>
                    <include field="realTimes">aggregatelistnonnull(realTime)</include>
                    <include field="inputCell">aggregatelistnonnull(cellParam)</include>
                    <include field="inputCcp">aggregatelistnonnull(ccpParam)</include>
                </expressions>
            </target-list>
        </box>
        <box name="checkCount" type="filter">
            <input port="1" stream="out:AggParamPerCar_1"/>
            <output port="1" stream="out:checkCount_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="count&gt;1"/>
        </box>
        <box name="pack" type="map">
            <input port="1" stream="out:checkCount_1"/>
            <output port="1" stream="out:pack_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="inputVars.*">*</include>
                </expressions>
            </target-list>
        </box>
        <box name="Predict" type="java">
            <input port="1" stream="out:pack_1"/>
            <output port="1" stream="out:Predict_1"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.python.PythonAdapter"/>
            <param name="Asynchronous" value="false"/>
            <param name="GlobalInstanceId" value="python_nn_instance"/>
            <param name="InstanceType" value="Global"/>
            <param name="LocalInstanceId" value="nn_instance"/>
            <param name="LogLevel" value="INFO"/>
            <param name="OutputVarsSchema" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;schema&gt;&#13;&#10;    &lt;field name=&quot;y_predict&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;long&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;    &lt;field name=&quot;cellScale&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;double&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;    &lt;field name=&quot;otherScale&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;double&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;    &lt;field name=&quot;count&quot; type=&quot;int&quot;/&gt;&#13;&#10;    &lt;field name=&quot;vehicleKeyID&quot; type=&quot;long&quot;/&gt;&#13;&#10;    &lt;field name=&quot;terminalID&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;mgmtNO&quot; type=&quot;string&quot;/&gt;&#13;&#10;    &lt;field name=&quot;rootCount&quot; type=&quot;int&quot;/&gt;&#13;&#10;    &lt;field name=&quot;cells&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;string&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;    &lt;field name=&quot;ccps&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;list&quot;&gt;&#13;&#10;            &lt;element-type type=&quot;double&quot;/&gt;&#13;&#10;        &lt;/element-type&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;    &lt;field name=&quot;realTimes&quot; type=&quot;list&quot;&gt;&#13;&#10;        &lt;element-type type=&quot;long&quot;/&gt;&#13;&#10;    &lt;/field&gt;&#13;&#10;&lt;/schema&gt;&#13;&#10;"/>
            <param name="Script" value="cellScale, otherScale, y_predict=predict(inputCell, inputCcp)&#13;&#10;cellScale=list(cellScale)&#13;&#10;otherScale=list(otherScale)&#13;&#10;y_predict=list(y_predict)&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;        "/>
            <param name="ScriptFile" value=""/>
            <param name="ScriptSource" value="Script text"/>
            <param name="amsRequiredOnStartup" value="false"/>
            <param name="artifactName" value=""/>
            <param name="artifactVersion" value=""/>
            <param name="enableControlPort" value="false"/>
        </box>
        <box name="unpack" type="map">
            <input port="1" stream="out:Predict_1"/>
            <output port="1" stream="out:unpack_1"/>
            <target-list>
                <item name="input" selection="none"/>
                <expressions>
                    <include field="*">outputVars.*</include>
                </expressions>
            </target-list>
        </box>
        <box name="checkNull" type="filter">
            <input port="1" stream="out:unpack_1"/>
            <output port="1" stream="out:checkNull_1"/>
            <param name="autogen-nomatch-port" value="false"/>
            <param name="expression.0" value="!isnull(y_predict)"/>
        </box>
        <box name="Iterate" type="iterate">
            <input port="1" stream="out:checkNull_1"/>
            <output port="1" stream="out:Iterate_1"/>
            <param name="iterate-expr" value="y_predict"/>
            <target-list>
                <item name="input" selection="none">
                    <include field="mgmtNO"/>
                    <include field="terminalID"/>
                    <include field="vehicleKeyID"/>
                    <include field="rootCount"/>
                </item>
                <expressions>
                    <include field="messageID">vehicleKeyID + '_' + rootCount + '_' + realTimes[each.index] + '_' + each.index</include>
                    <include field="realTime">realTimes[each.index]</include>
                    <include field="cellData">cells[each.index]</include>
                    <include field="ibm">ccps[each.index][0]</include>
                    <include field="isol">ccps[each.index][1]</include>
                    <include field="vbMax">ccps[each.index][2]</include>
                    <include field="vbMin">ccps[each.index][3]</include>
                    <include field="tbMax">ccps[each.index][4]</include>
                    <include field="tbMin">ccps[each.index][5]</include>
                    <include field="soc">ccps[each.index][6]</include>
                    <include field="deltaVoltage">ccps[each.index][7]</include>
                    <include field="deltaTemp">ccps[each.index][8]</include>
                    <include field="cellScale">joinCCPNumberList(cellScale)</include>
                    <include field="otherScale">joinCCPNumberList(otherScale)</include>
                    <include field="predict">each.element</include>
                </expressions>
            </target-list>
        </box>
        <box name="ToPredictTable" type="outputadapter">
            <input port="1" stream="out:Iterate_1"/>
            <output port="1" stream="OutputPublishStream"/>
            <param name="start:state" value="true"/>
            <param name="javaclass" value="com.streambase.sb.adapter.liveview.LiveViewPublish"/>
            <param name="ackPeriod" value="0"/>
            <param name="adHoc" value="false"/>
            <param name="bufferSize" value="100"/>
            <param name="connectInline" value="false"/>
            <param name="connectionKey" value=""/>
            <param name="deleteField" value=""/>
            <param name="dynamicTableName" value="false"/>
            <param name="enableCompressedConnection" value="false"/>
            <param name="encapsulatingLV" value="false"/>
            <param name="flushInterval" value="250"/>
            <param name="logLevel" value="INFO"/>
            <param name="lvTableName" value="CP_PredictDataTable"/>
            <param name="pubName" value=""/>
            <param name="reliablePub" value="false"/>
            <param name="seqField" value=""/>
            <param name="shareConnection" value="true"/>
            <param name="strictSchema" value="false"/>
            <param name="throughPort" value="false"/>
            <param name="uri" value="${LV_SERVER_URI}"/>
            <param name="useRuntimeURI" value="false"/>
        </box>
        <output-stream name="OutputPublishStream"/>
    </add>
</modify>
